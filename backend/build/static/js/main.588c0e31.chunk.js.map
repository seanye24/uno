{"version":3,"sources":["components/Header.js","components/Footer.js","services/socket.js","components/Deck.js","components/Opponent.js","components/Card.js","components/Hand.js","components/Player.js","components/Game.js","App.js","index.js"],"names":["Header","socket","io","play","data","console","log","card","color","value","id","emit","draw","uno","sendName","name","on","Deck","Opponent","opponent","hand","length","Card","validateCard","onClick","Hand","cards","colSpan","map","c","key","className","Player","props","player","cardOnTop","currTurn","myTurn","playCard","alert","Game","useState","opponents","winner","setProps","socketService","playerData","join","find","p","topCard","filter","currPlayer","o","App","Footer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.588c0e31.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <center><h1>UNO.io</h1></center>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Header = () => {\n    return (\n        <center><h3>Bean Bwill</h3></center>\n    )\n}\n\nexport default Header","import Game from './../components/Game';\nimport io from 'socket.io-client';\n  \nconst socket = io('http://localhost:3000');\n\nconst play = (data) => {\n  console.log(\n    `sending ${data.card.color}${data.card.value} as player id ${data.id}`\n  );\n  socket.emit('play', data);\n};\n\nconst draw = (data) => {\n  console.log(`drawing a card as id ${data.id}`);\n  socket.emit(\"draw\", data);\n};\n\nconst sendName = (data) => {\n  console.log(`sending name ${data.name} to server`);\n  socket.emit('giveName', data);\n  socket.on(\"giveID\", (data) => {\n    return data.id\n  });\n};\n\nconst uno = (data) => {\n  console.log(`sending uno signal to server from id ${data.id}`);\n  socket.emit('uno', data);\n};\n\nexport default { play, draw, uno, sendName, socket };\n","import React from 'react';\nimport './../App';\n\nconst Deck = () => {\n  return <div id='deck'>Deck</div>;\n};\n\nexport default Deck;\n","import React from 'react';\n\nconst Opponent = ({ opponent }) => {\n  return (\n    <div>\n      <p>Op: {opponent.id}</p>\n      <p>Cards: {opponent.hand.length}</p>\n    </div>\n  );\n};\n\nexport default Opponent;\n","import React from 'react';\n\nconst Card = ({ card, validateCard }) => {\n  // console.log(`color: ${card.color}`);\n  return (\n    <button onClick={() => validateCard(card)}>\n      {card.color}\n      {card.value}\n    </button>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport './../App.css'\n\nconst Hand = ({ cards, validateCard }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th colSpan={cards.length}>Cards in hand: {cards.length}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {cards.map((c) => (\n            <td key={`${c.color}${c.value}`} className='playerCard'>\n              <Card\n                card={c}\n                validateCard={validateCard}\n              />\n            </td>\n          ))}\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Hand;\n","import React from 'react';\nimport Hand from './Hand';\n\nconst Player = (props) => {\n  const player = props.player;\n  const cardOnTop = props.cardOnTop;\n  const currTurn = props.currTurn;\n  const myTurn = player.id === currTurn;\n\n  const validateCard = (card) => {\n    if (myTurn) {\n      if (card.color === cardOnTop.color || card.value === cardOnTop.value) {\n        props.playCard(card);\n      } else {\n        alert(`Play a valid card.`);\n      }\n    } else {\n      if (card.color === cardOnTop.color && card.value === cardOnTop.value) {\n        props.playCard(card);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Hand cards={player.hand} validateCard={validateCard} />\n    </div>\n  );\n};\n\nexport default Player;\n","import React, { useState } from \"react\";\nimport \"./../App.css\";\nimport socketService from \"./../services/socket.js\";\nimport Deck from \"./Deck\";\nimport Opponent from \"./Opponent\";\nimport Player from \"./Player\";\n\nconst Game = () => {\n  // const [id, setId] = useState(null);\n  // const [hand, setHand] = useState([]);\n  // const [cardOnTop, setCardOnTop] = useState([]);\n  // const [opponents, setOpponents] = useState([]);\n  // const [currTurn, setCurrTurn] = useState(null);\n  // const [winner, setWinner] = useState(null);\n\n  const [props, setProps] = useState({\n    id: null,\n    hand: [],\n    cardOnTop: [],\n    opponents: [],\n    currTurn: [],\n    winner: [],\n  });\n\n  const { id, hand, cardOnTop, opponents, currTurn, winner } = props;\n\n  const draw = () => {\n    console.log(`calling draw`);\n    socketService.draw({ id: id });\n  };\n\n  const playCard = (card) => {\n    socketService.play({ id: id, card: card });\n  };\n\n  if (id) {\n    socketService.socket.on(\"fetch\", (data) => {\n      console.log(`receiving data as player id ${id}`);\n      console.log(`player data: ${data.playerData.join()}`);\n      console.log(\"hand: \" + data.playerData.find((p) => p.id === id).hand);\n      // setWinner(data.winner);\n      // console.log(`rendering hand`)\n      // setCardOnTop(data.topCard);\n      // console.log(`rendering hand`)\n      // setCurrTurn(data.currPlayer);\n      // console.log(`rendering hand`)\n      // setHand(data.playerData.find((p) => p.id === id).hand);\n      // console.log(`rendering hand`)\n      // setOpponents(data.playerData.filter((p) => p.id !== id));\n      // console.log(`rendering hand`)\n\n      setProps({\n        ...props,\n        hand: data.playerData.find((p) => p.id === id).hand,\n        cardOnTop: data.topCard,\n        opponents: data.playerData.filter((p) => p.id !== id),\n        currTurn: data.currPlayer,\n        winner: data.winner,\n      });\n      if (!winner) {\n        return (\n          //players in circle\n          //deck in middle/ uno button\n          <div>\n            <center>\n              <table>\n                <tbody>\n                  <tr>\n                    {opponents.map((o) => (\n                      <td key={o.id} className=\"opponent\">\n                        <Opponent opponent={o} />\n                      </td>\n                    ))}\n                  </tr>\n                </tbody>\n              </table>\n              <Deck />\n              <p>Top Card: {`${cardOnTop.color}${cardOnTop.value}`}</p>\n              <button onClick={() => draw()}>Draw</button>\n              <Player\n                player={{ hand: hand, id: id }}\n                cardOnTop={cardOnTop}\n                currTurn={currTurn}\n                playCard={playCard}\n              />\n            </center>\n          </div>\n          //player's deck with navigation buttons\n        );\n      } else {\n        return <h1>Game Over Boiz!</h1>;\n      }\n    });\n  }\n\n  socketService.socket.on(\"giveID\", (data) => {\n    setProps({ ...props, id: data.id });\n  });\n  return null;\n};\n\nexport default Game;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Game from './components/Game';\nimport socketService from './services/socket.js';\n\nlet name = 'benis'\nlet id = socketService.sendName({ name });\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Game name={name} id={id}/>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}