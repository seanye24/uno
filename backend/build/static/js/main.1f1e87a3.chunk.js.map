{"version":3,"sources":["components/Header.js","components/Footer.js","components/Card.js","components/Hand.js","components/Player.js","components/Deck.js","components/Opponent.js","services/socket.js","components/Game.js","App.js","index.js"],"names":["Header","Card","card","validateCard","console","log","color","onClick","value","Hand","cards","colSpan","length","map","c","key","className","Player","props","player","cardOnTop","currTurn","id","hand","playCard","alert","Deck","Opponent","opponent","socket","io","on","data","Game","setWinner","winner","setCardOnTop","topCard","setCurrTurn","currPlayer","setCards","playerData","find","p","setOpponents","filter","setId","emit","numPlayers","useState","opponents","o","socketService","name","App","Footer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f1e87a3.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <center><h1>UNO.io</h1></center>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Header = () => {\n    return (\n        <center><h3>Bean Bwill</h3></center>\n    )\n}\n\nexport default Header","import React from 'react';\n\nconst Card = ({ card, validateCard }) => {\n  console.log(`color: ${card.color}`);\n  return (\n    <button onClick={() => validateCard(card)}>\n      {card.color}\n      {card.value}\n    </button>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport './../App.css'\n\nconst Hand = ({ cards, validateCard }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th colSpan={cards.length}>Cards in hand: {cards.length}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {cards.map((c) => (\n            <td key={`${c.color}${c.value}`} className='playerCard'>\n              <Card\n                card={c}\n                validateCard={validateCard}\n              />\n            </td>\n          ))}\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Hand;\n","import React from 'react';\nimport Hand from './Hand';\n\nconst Player = (props) => {\n  const player = props.player;\n  const cardOnTop = props.cardOnTop;\n  const currTurn = props.currTurn;\n  const myTurn = player.id === currTurn;\n\n  const validateCard = (card) => {\n    if (card.color === cardOnTop.color || card.value === cardOnTop.value) {\n      props.playCard(card);\n    } else {\n      alert(`Play a valid card.`);\n    }\n  };\n\n  return (\n    <div>\n      <Hand cards={player.hand} validateCard={validateCard} />\n    </div>\n  );\n};\n\nexport default Player;\n","import React from 'react';\nimport './../App';\n\nconst Deck = () => {\n  return <div id='deck'>Deck</div>;\n};\n\nexport default Deck;\n","import React from 'react';\n\nconst Opponent = ({ opponent }) => {\n  return (\n    <div>\n      <p>Op: {opponent.id}</p>\n      <p>Cards: {opponent.hand.length}</p>\n    </div>\n  );\n};\n\nexport default Opponent;\n","import Game from './../components/Game';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:3000');\n\nconst play = ({ id, card }) => {\n  console.log(`sending ${card.color}${card.value} as player id ${id}`);\n  socket.emit('play', { id, card });\n};\n\nconst draw = (data) => {\n  console.log(`drawing a card as id ${data.id}`);\n  socket.emit('draw', data);\n};\n\nconst sendName = (data) => {\n  console.log(`sending name ${data.name} to server`);\n  socket.emit('giveName', data);\n};\n\nconst uno = ({ id }) => {\n  console.log(`sending uno signal to server from id ${Game.id}`);\n  socket.emit('uno', { id });\n};\n\nsocket.on('fetch', (data) => {\n  console.log(`receiving data as player id ${Game.id}`);\n  Game.setWinner(data.winner);\n  Game.setCardOnTop(data.topCard);\n  Game.setCurrTurn(data.currPlayer);\n  Game.setCards(data.playerData.find((p) => p.id === Game.id).hand);\n  Game.setOpponents(data.playerData.filter((p) => p.id !== Game.id));\n});\n\nsocket.on('giveID', (data) => {\n  console.log(`receiving id ${data.id} to server`);\n  Game.setId(data.id);\n});\n\nexport default { play, draw, uno, sendName };\n","import React, { useState, cloneElement } from 'react';\nimport Player from './Player';\nimport Deck from './Deck';\nimport Opponent from './Opponent';\nimport './../App.css';\nimport socketService from './../services/socket.js';\n\nconst Game = ({ numPlayers }) => {\n  const [id, setId] = useState(null);\n  const [hand, setHand] = useState([]);\n  const [cardOnTop, setCardOnTop] = useState([]);\n  const [opponents, setOpponents] = useState([]);\n  const [currTurn, setCurrTurn] = useState(null);\n  const [winner, setWinner] = useState(null);\n\n  const draw = () => {\n    socketService.draw({ id: id });\n  };\n\n  const playCard = (card) => {\n    socketService.play({ id: id, card: card });\n  };\n\n  if (!winner) {\n    return (\n      //players in circle\n      //deck in middle/ uno button\n      <div>\n        <center>\n          <table>\n            <tbody>\n              <tr>\n                {opponents.map((o) => (\n                  <td key={o.id} className='opponent'>\n                    <Opponent opponent={o} />\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n          <Deck />\n          <p>Top Card: {`${cardOnTop.color}${cardOnTop.value}`}</p>\n          <button onClick={() => draw()}>Draw</button>\n          <Player\n            player={{ hand: hand, id: id }}\n            cardOnTop={cardOnTop}\n            currTurn={currTurn}\n            playCard={playCard}\n          />\n        </center>\n      </div>\n      //player's deck with navigation buttons\n    );\n  } else {\n    return <h1>Game Over Boiz!</h1>;\n  }\n};\n\nexport default Game;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Game from './components/Game';\nimport socketService from './services/socket.js';\n\nsocketService.sendName({ name: 'benis is my name' });\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Game />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}