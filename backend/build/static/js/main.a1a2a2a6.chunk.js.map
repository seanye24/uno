{"version":3,"sources":["components/Header.js","components/Footer.js","components/Card.js","components/Hand.js","components/Player.js","components/Deck.js","components/Opponent.js","services/socket.js","components/Game.js","App.js","index.js"],"names":["Header","Card","card","validateCard","onClick","color","value","Hand","cards","colSpan","length","map","c","key","className","Player","props","player","cardOnTop","currTurn","id","hand","playCard","alert","Deck","Opponent","opponent","socket","io","play","data","console","log","emit","draw","uno","Game","sendName","name","numPlayers","useState","setId","setHand","setCardOnTop","opponents","setOpponents","setCurrTurn","winner","setWinner","socketService","on","topCard","currPlayer","playerData","find","p","filter","o","App","Footer","ReactDOM","render","document","getElementById"],"mappings":"iPAQeA,G,WANA,WACX,OACI,gCAAQ,yCCIDA,EANA,WACX,OACI,gCAAQ,4C,OCQDC,EAVF,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAEpB,OACE,4BAAQC,QAAS,kBAAMD,EAAaD,KACjCA,EAAKG,MACLH,EAAKI,QCqBGC,EAxBF,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOL,EAAmB,EAAnBA,aACrB,OACE,+BACE,+BACE,4BACE,wBAAIM,QAASD,EAAME,QAAnB,kBAA2CF,EAAME,UAGrD,+BACE,4BACGF,EAAMG,KAAI,SAACC,GAAD,OACT,wBAAIC,IAAG,UAAKD,EAAEP,OAAP,OAAeO,EAAEN,OAASQ,UAAU,cACzC,kBAAC,EAAD,CACEZ,KAAMU,EACNT,aAAcA,YCMfY,EArBA,SAACC,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAYF,EAAME,UAClBC,EAAWH,EAAMG,SACRF,EAAOG,GAUtB,OACE,6BACE,kBAAC,EAAD,CAAMZ,MAAOS,EAAOI,KAAMlB,aAVT,SAACD,GAChBA,EAAKG,QAAUa,EAAUb,OAASH,EAAKI,QAAUY,EAAUZ,MAC7DU,EAAMM,SAASpB,GAEfqB,MAAM,2BCNGC,EAJF,WACX,OAAO,yBAAKJ,GAAG,QAAR,SCOMK,EATE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,6BACE,kCAAQA,EAASN,IACjB,qCAAWM,EAASL,KAAKX,U,QCHzBiB,E,MAASC,GAAG,yBAwBH,GAAEC,KAtBJ,SAACC,GACZC,QAAQC,IAAR,kBACaF,EAAK5B,KAAKG,OADvB,OAC+ByB,EAAK5B,KAAKI,MADzC,yBAC+DwB,EAAKV,KAEpEO,EAAOM,KAAK,OAAQH,IAkBCI,KAfV,SAACJ,GACZC,QAAQC,IAAR,+BAAoCF,EAAKV,KACzCO,EAAOM,KAAK,OAAQH,IAaOK,IALjB,SAAC,GAAY,IAAVf,EAAS,EAATA,GACbW,QAAQC,IAAR,+CAAoDI,EAAKhB,KACzDO,EAAOM,KAAK,MAAO,CAAEb,QAGWiB,SAVjB,SAACP,GAChBC,QAAQC,IAAR,uBAA4BF,EAAKQ,KAAjC,eACAX,EAAOM,KAAK,WAAYH,IAQkBH,UCgD7BS,EAnEF,SAAC,GAAmB,EAAjBG,WAAkB,IAAD,EACXC,mBAAS,MADE,mBACxBpB,EADwB,KACpBqB,EADoB,OAEPD,mBAAS,IAFF,mBAExBnB,EAFwB,KAElBqB,EAFkB,OAGGF,mBAAS,IAHZ,mBAGxBtB,EAHwB,KAGbyB,EAHa,OAIGH,mBAAS,IAJZ,mBAIxBI,EAJwB,KAIbC,EAJa,OAKCL,mBAAS,MALV,mBAKxBrB,EALwB,KAKd2B,EALc,OAMHN,mBAAS,MANN,mBAMxBO,EANwB,KAMhBC,EANgB,KAgC/B,OAlBI5B,GACF6B,EAActB,OAAOuB,GAAG,SAAS,SAACpB,GAClCC,QAAQC,IAAR,sCAA2CZ,IAG3C4B,EAAUlB,EAAKiB,QACfJ,EAAab,EAAKqB,SAClBL,EAAYhB,EAAKsB,YACjBV,EAAQZ,EAAKuB,WAAWC,MAAK,SAACC,GAAD,OAAOA,EAAEnC,KAAOA,KAAIC,MACjDwB,EAAaf,EAAKuB,WAAWG,QAAO,SAACD,GAAD,OAAOA,EAAEnC,KAAOA,SAGtD6B,EAActB,OAAOuB,GAAG,UAAU,SAACpB,GAEjCW,EAAMX,EAAKV,OAIR2B,EA+BI,+CA3BL,6BACE,gCACE,+BACE,+BACE,4BACGH,EAAUjC,KAAI,SAAC8C,GAAD,OACb,wBAAI5C,IAAK4C,EAAErC,GAAIN,UAAU,YACvB,kBAAC,EAAD,CAAUY,SAAU+B,WAM9B,kBAAC,EAAD,MACA,kDAAiBvC,EAAUb,OAA3B,OAAmCa,EAAUZ,QAC7C,4BAAQF,QAAS,WA3CvB6C,EAAcf,KAAK,CAAEd,GAAIA,MA2CnB,QACA,kBAAC,EAAD,CACEH,OAAQ,CAAEI,KAAMA,EAAMD,GAAIA,GAC1BF,UAAWA,EACXC,SAAUA,EACVG,SA7CO,SAACpB,GAChB+C,EAAcpB,KAAK,CAAET,GAAIA,EAAIlB,KAAMA,UCbvC+C,EAAcZ,SAAS,CAAEC,KAAM,qBAYhBoB,MAVf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACC,EAAD,QCTNC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.a1a2a2a6.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <center><h1>UNO.io</h1></center>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Header = () => {\n    return (\n        <center><h3>Bean Bwill</h3></center>\n    )\n}\n\nexport default Header","import React from 'react';\n\nconst Card = ({ card, validateCard }) => {\n  // console.log(`color: ${card.color}`);\n  return (\n    <button onClick={() => validateCard(card)}>\n      {card.color}\n      {card.value}\n    </button>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport './../App.css'\n\nconst Hand = ({ cards, validateCard }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th colSpan={cards.length}>Cards in hand: {cards.length}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {cards.map((c) => (\n            <td key={`${c.color}${c.value}`} className='playerCard'>\n              <Card\n                card={c}\n                validateCard={validateCard}\n              />\n            </td>\n          ))}\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Hand;\n","import React from 'react';\nimport Hand from './Hand';\n\nconst Player = (props) => {\n  const player = props.player;\n  const cardOnTop = props.cardOnTop;\n  const currTurn = props.currTurn;\n  const myTurn = player.id === currTurn;\n\n  const validateCard = (card) => {\n    if (card.color === cardOnTop.color || card.value === cardOnTop.value) {\n      props.playCard(card);\n    } else {\n      alert(`Play a valid card.`);\n    }\n  };\n\n  return (\n    <div>\n      <Hand cards={player.hand} validateCard={validateCard} />\n    </div>\n  );\n};\n\nexport default Player;\n","import React from 'react';\nimport './../App';\n\nconst Deck = () => {\n  return <div id='deck'>Deck</div>;\n};\n\nexport default Deck;\n","import React from 'react';\n\nconst Opponent = ({ opponent }) => {\n  return (\n    <div>\n      <p>Op: {opponent.id}</p>\n      <p>Cards: {opponent.hand.length}</p>\n    </div>\n  );\n};\n\nexport default Opponent;\n","import Game from './../components/Game';\nimport io from 'socket.io-client';\n  \nconst socket = io('http://localhost:3000');\n\nconst play = (data) => {\n  console.log(\n    `sending ${data.card.color}${data.card.value} as player id ${data.id}`\n  );\n  socket.emit('play', data);\n};\n\nconst draw = (data) => {\n  console.log(`drawing a card as id ${data.id}`);\n  socket.emit(\"draw\", data);\n};\n\nconst sendName = (data) => {\n  console.log(`sending name ${data.name} to server`);\n  socket.emit('giveName', data);\n};\n\nconst uno = ({ id }) => {\n  console.log(`sending uno signal to server from id ${Game.id}`);\n  socket.emit('uno', { id });\n};\n\nexport default { play, draw, uno, sendName, socket };\n","import React, { useState, useEffect } from \"react\";\nimport Player from \"./Player\";\nimport Deck from \"./Deck\";\nimport Opponent from \"./Opponent\";\nimport \"./../App.css\";\nimport socketService from \"./../services/socket.js\";\n\n\nconst Game = ({ numPlayers }) => {\n  const [id, setId] = useState(null);\n  const [hand, setHand] = useState([]);\n  const [cardOnTop, setCardOnTop] = useState([]);\n  const [opponents, setOpponents] = useState([]);\n  const [currTurn, setCurrTurn] = useState(null);\n  const [winner, setWinner] = useState(null);\n  const draw = () => {\n    socketService.draw({ id: id });\n  };\n\n  const playCard = (card) => {\n    socketService.play({ id: id, card: card });\n  };\n  if (id) {\n    socketService.socket.on(\"fetch\", (data) => {\n    console.log(`receiving data as player id ${id}`);\n    // console.log(`player data: ${data.playerData.map((p) => console.log(p))}`);\n    // console.log(\"hand: \" + data.playerData.find((p) => p.id === id).hand);\n    setWinner(data.winner);\n    setCardOnTop(data.topCard);\n    setCurrTurn(data.currPlayer);\n    setHand(data.playerData.find((p) => p.id === id).hand);\n    setOpponents(data.playerData.filter((p) => p.id !== id));\n  });}\n\n  socketService.socket.on(\"giveID\", (data) => {\n    // console.log(`receiving id ${data.id} from server`);\n    setId(data.id);\n    // console.log(id)\n  });\n\n  if (!winner) {\n    return (\n      //players in circle\n      //deck in middle/ uno button\n      <div>\n        <center>\n          <table>\n            <tbody>\n              <tr>\n                {opponents.map((o) => (\n                  <td key={o.id} className=\"opponent\">\n                    <Opponent opponent={o} />\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n          <Deck />\n          <p>Top Card: {`${cardOnTop.color}${cardOnTop.value}`}</p>\n          <button onClick={() => draw()}>Draw</button>\n          <Player\n            player={{ hand: hand, id: id }}\n            cardOnTop={cardOnTop}\n            currTurn={currTurn}\n            playCard={playCard}\n          />\n        </center>\n      </div>\n      //player's deck with navigation buttons\n    );\n  } else {\n    return <h1>Game Over Boiz!</h1>;\n  }\n};\n\nexport default Game;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Game from './components/Game';\nimport socketService from './services/socket.js';\n\nsocketService.sendName({ name: 'benis is my name' });\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Game />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}