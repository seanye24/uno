{"version":3,"sources":["components/Header.js","components/Footer.js","components/Card.js","components/Hand.js","components/Player.js","components/Deck.js","components/Opponent.js","components/Game.js","App.js","index.js"],"names":["Header","Card","card","validateCard","console","log","color","onClick","value","Hand","cards","colSpan","length","map","c","key","className","Player","props","player","cardOnTop","currTurn","id","playCard","alert","Deck","Opponent","opponent","createCard","openSocket","currDeck","opponents","pcards","Game","numPlayers","useState","setCards","winner","setCardOnTop","deck","setDeck","o","concat","pop","App","Footer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee306343.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <center><h1>UNO.io</h1></center>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Header = () => {\n    return (\n        <center><h3>Bean Bwill</h3></center>\n    )\n}\n\nexport default Header","import React from 'react';\n\nconst Card = ({ card, validateCard }) => {\n  console.log(`color: ${card.color}`);\n  return (\n    <button onClick={() => validateCard(card)}>\n      {card.color}\n      {card.value}\n    </button>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport './../App.css'\n\nconst Hand = ({ cards, validateCard }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th colSpan={cards.length}>Cards in hand: {cards.length}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          {cards.map((c) => (\n            <td key={`${c.color}${c.value}`} className='playerCard'>\n              <Card\n                card={c}\n                validateCard={validateCard}\n              />\n            </td>\n          ))}\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Hand;\n","import React from 'react';\nimport Hand from './Hand';\n\nconst Player = (props) => {\n  const player = props.player;\n  const cardOnTop = props.cardOnTop;\n  const currTurn = props.currTurn;\n  const myTurn = player.id === currTurn;\n\n  const validateCard = (card) => {\n    if (card.color === cardOnTop.color || card.value === cardOnTop.value) {\n      props.playCard(card);\n    } else {\n      alert(`Play a valid card.`)\n    }\n  };\n\n  return (\n    <div>\n      <Hand cards={player.cards} validateCard={validateCard} />\n    </div>\n  );\n};\n\nexport default Player;\n","import React from 'react';\nimport './../App'\n\nconst Deck = (props) => {\n  let cards = props.cards;\n\n  return <div id='deck'>Cards in Deck: {cards}</div>;\n};\n\nexport default Deck;\n","import React from 'react';\n\nconst Opponent = ({ opponent }) => {\n  return (\n    <div>\n      <p>Op: {opponent.id}</p>\n      <p>Cards: {opponent.cards}</p>\n    </div>\n  );\n};\n\nexport default Opponent;\n","import React, { useState, cloneElement } from 'react';\nimport Player from './Player';\nimport Deck from './Deck';\nimport Opponent from './Opponent';\nimport './../App.css'\nimport openSocket from 'socket.io-client'\nconst socket = openSocket('http://localhost:3000')\n\n\nconst createCard = (color, value) => {\n  return {\n    color: color,\n    value: value,\n  };\n};\n\nconst currDeck = [\n  createCard('b', 1),\n  createCard('b', 2),\n  createCard('b', 3),\n  createCard('b', 4),\n  createCard('b', 5),\n  createCard('b', 6),\n  createCard('b', 7),\n];\n\nconst opponents = [\n  {\n    id: 'op1',\n    cards: 4,\n  },\n  {\n    id: 'op2',\n    cards: 10,\n  },\n  {\n    id: 'op3',\n    cards: 2,\n  },\n];\n\nconst pcards = [\n  createCard('g', 1),\n  createCard('g', 2),\n  createCard('g', 3),\n  createCard('g', 4),\n  createCard('g', 5),\n];\n\nconst pid = '1';\n\nconst currPlayer = {\n  id: '1',\n  cards: pcards,\n};\n\nconst currTurn = 1;\n\nconst Game = ({ numPlayers }) => {\n  const [cards, setCards] = useState(pcards);\n  const [id, setId] = useState(pid);\n  const [winner, setWinner] = useState(null);\n  const [cardOnTop, setCardOnTop] = useState(createCard('y', 1));\n  const [deck, setDeck] = useState(currDeck);\n\n  const draw = () => {\n    setCards(cards.concat(deck.pop()));\n    setDeck(deck);\n  };\n\n  const playCard = (card) => {\n    setCardOnTop(card);\n  };\n\n  if (!winner) {\n    return (\n      //players in circle\n      //deck in middle/ uno button\n      <div>\n        <center>\n          <table>\n            <tbody>\n              <tr>\n                {opponents.map((o) => (\n                  <td key={o.id} className='opponent'>\n                    <Opponent opponent={o} />\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n          <Deck cards={deck.length} />\n          <p>Top Card: {`${cardOnTop.color}${cardOnTop.value}`}</p>\n          <button onClick={() => draw()}>\n              Draw\n          </button>\n          <Player\n            player={{ cards: cards, id: id }}\n            cardOnTop={cardOnTop}\n            currTurn={currTurn}\n            playCard={playCard}\n          />\n        </center>\n      </div>\n      //player's deck with navigation buttons\n    );\n  } else {\n    return <h1>Game Over Boiz!</h1>;\n  }\n};\n\nexport default Game;\n","import React from 'react'\nimport './App.css'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Game from './components/Game'\n\nfunction App() {\n  return (\n    <div>\n    <Header />\n    <Game />\n    <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}